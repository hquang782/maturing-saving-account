name: Deploy Microservices

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - service: 'SavingAccount'
            db: 'saving_account_service'
            port: 8080
          - service: 'User'
            db: 'customer_service'
            port: 8081
          - service: 'TaskService'
            db: 'task_service'
            port: 8082
          - service: 'Auth'
            db: 'auth_service'
            port: 8083

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: ${{ matrix.db }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build and deploy service
        run: |
          cd ${{ matrix.service }}
          mvn clean install
          SPRING_DATASOURCE_URL=jdbc:mysql://localhost:3306/${{ matrix.db }} \
          SPRING_DATASOURCE_USERNAME=root \
          SPRING_DATASOURCE_PASSWORD='' \
          java -jar target/${{ matrix.service }}-0.0.1-SNAPSHOT.jar
          JAR_PID=$!
          echo "Waiting for the service to start..."
          sleep 30  # Adjust the sleep time as necessary to give the service enough time to start
          if curl -f http://localhost:${{ matrix.port }}/actuator/health; then
            echo "Service started successfully"
            kill $JAR_PID
          else
            echo "Service failed to start"
            exit 1
          fi
